{"version":3,"file":"static/js/758.99d9dd69.chunk.js","mappings":"iZAEaA,EAAgBC,EAAAA,GAAAA,IAAH,kJ,6MCgJ1B,EA5HgB,SAAC,GAGV,IAAD,IAFJC,KAAQC,EAEJ,EAFIA,OAAQC,EAEZ,EAFYA,YAAaC,EAEzB,EAFyBA,OAAQC,EAEjC,EAFiCA,kBAAmBC,EAEpD,EAFoDA,WACxDC,EACI,EADJA,QAEA,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,MAEAC,EAAAA,EAAAA,YAAU,WACR,QAASL,GACP,KAAK,EACHI,EAAkBE,EAAAA,EAAAA,OAAAA,gBAClB,MAEF,KAAK,EACHF,EAAkBE,EAAAA,EAAAA,OAAAA,gBAClB,MAEF,KAAK,EAIL,KAAK,EACHF,EAAkBE,EAAAA,EAAAA,OAAAA,oBAClB,MAEF,KAAK,EAIL,KAAK,GAIL,KAAK,GACHF,EAAkBE,EAAAA,EAAAA,OAAAA,YAClB,MAEF,QACEF,EAAkBE,EAAAA,EAAAA,OAAAA,WAIvB,GAAE,CAACN,IAEJ,IAAMO,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,KAAXD,OAEFE,GAAcjB,EAAAA,EAAAA,KAAO,gBAAGkB,EAAH,EAAGA,UAAcC,GAAjB,mBACzB,SAACC,EAAA,GAAD,kBAAaD,GAAb,IAAoBE,QAAS,CAAEC,OAAQJ,KADd,GAAPlB,EAEjB,gBAAGY,EAAH,EAAGA,MAAH,8BACMW,EAAAA,EAAAA,SAA2B,CAChCC,gBAAiB,UACjBC,MAAO,sBACPC,SAAU,IACVC,SAAUf,EAAMgB,WAAWC,QAAQ,IACnCC,OAAQ,qBANT,IAUGC,GAAWC,EAAAA,EAAAA,MAgBjB,OACE,iCACE,SAACC,EAAA,GAAD,CACEC,GAAI,CACFC,WAAY1B,GAEd2B,QAAM,EACNC,QAAS,kBAdKC,EAcapC,EAb/BW,GAAS0B,EAAAA,EAAAA,GAASD,IAClBP,EAAS,UAAD,OAAWO,SAEnBvB,GAAUR,KAJQ,IAAA+B,CAcL,EACTE,iBACE,SAACpB,EAAA,EAAD,CAASqB,MAAM,mDAAWC,OAAK,EAA/B,UACE,SAACC,EAAA,EAAD,CACEC,KAAK,MACL,aAAW,SACXP,QAAS,SAAAQ,GAAC,OA3BD,SAACA,EAAGP,GACvBO,EAAEC,kBAEFjC,GAASkC,EAAAA,EAAAA,IAAUT,IACnBP,EAAS,SAAU,CAAEiB,SAAS,GAC/B,CAsByBC,CAAaJ,EAAG3C,EAApB,EAHZ,UAKE,SAACgD,EAAA,EAAD,QAbR,UAkBE,SAACjC,EAAD,CACEwB,OACE,iCACE,SAACU,EAAA,EAAD,CAAY1B,MAAM,UAAlB,SAA6BrB,KAC7B,uBAAIC,OAJV,UAQE,SAAC+C,EAAA,EAAD,CACEC,QAASnD,EACToD,WAAWC,EAAAA,EAAAA,GAAOpD,EAAa,WAAY,CACzCqD,OAAQC,EAAAA,WAKhB,SAACC,EAAA,EAAD,MAGL,ECtGD,EArBgB,SAAC,GAAiB,IAAfnD,EAAc,EAAdA,QACXoD,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAAyBF,EAAAA,EAAAA,IAAYG,EAAAA,IAE3C,OACE,SAAChE,EAAD,UACG+D,GACC,SAACE,EAAA,EAAD,CAAO9B,GAAI,CAAE+B,EAAG,GAAhB,SAAsBC,EAAAA,EAAAA,gBAEtB,SAACC,EAAA,EAAD,UACGR,EAAgBS,KAAI,SAAA9B,GACnB,OAAO,SAAC,EAAD,CAA0BrC,KAAMqC,EAAK/B,QAASA,GAAhC+B,EAAIpC,OAC1B,OAKV,E,8DC1BYmE,IAASrE,EAAAA,EAAAA,IAAO,MAAPA,EAAc,gBAAGY,EAAH,EAAGA,MAAH,eAClC0D,SAAU,WACVC,aAAc3D,EAAM4D,MAAMD,aAC1B/C,gBAAiBZ,EAAM6D,QAAQC,KAAK,KACpC,UAAW,CACTlD,gBAAiBZ,EAAM6D,QAAQC,KAAK,KAEtCC,UAAW,GACXC,MAAO,QACNhE,EAAMiE,YAAYC,GAAG,MAAQ,CAC5BC,WAAYnE,EAAMoE,QAAQ,GAC1BJ,MAAO,QAXyB,IAevBK,IAAoBjF,EAAAA,EAAAA,IAAO,MAAPA,EAAc,kBAAgB,CAC7DkF,QAD6C,EAAGtE,MACjCoE,QAAQ,EAAG,GAC1BG,OAAQ,OACRb,SAAU,WACVc,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAP6B,IAUlCC,IAAkBxF,EAAAA,EAAAA,IAAOyF,GAAAA,GAAPzF,EAAkB,gBAAGY,EAAH,EAAGA,MAAH,MAAgB,CAC/Da,MAAO,UACP,wBAAyB,CACvByD,QAAStE,EAAMoE,QAAQ,EAAG,EAAG,EAAG,GAChCU,YAAY,cAAD,OAAgB9E,EAAMoE,QAAQ,GAA9B,KACXJ,MAAO,QALsC,I,WCMjD,GA3Be,WACb,IAAM/D,GAAWC,EAAAA,EAAAA,MAEX6E,GAAS/B,EAAAA,EAAAA,IAAYgC,EAAAA,IAS3B,OACE,UAAC,GAAD,YACE,SAACX,GAAD,WACE,SAACZ,GAAA,EAAD,OAEF,SAACmB,GAAD,CACEK,YAAY,eACZC,WAAY,CAAE,aAAc,UAC5BC,MAAOJ,EACPK,SAhBqB,SAAAnD,GACrBA,EAAEoD,OAAOF,MAAMG,OAAS,IAAMhG,OAAOiG,OAAOtD,EAAEoD,OAAOF,QAGzDlF,GAASuF,EAAAA,GAAAA,GAAevD,EAAEoD,OAAOF,OAClC,MAeF,ECmDD,GAjEsB,SAAC,GAAiB,IAAfxF,EAAc,EAAdA,QACjBM,GAAWC,EAAAA,EAAAA,MACXuF,GAAiBzC,EAAAA,EAAAA,IAAY0C,EAAAA,IAC7BvE,GAAWC,EAAAA,EAAAA,MAGjB,GAA2BhB,EAAAA,EAAAA,KAAnBD,EAAR,EAAQA,OAAQwF,EAAhB,EAAgBA,OAShB,OACE,iCACE,SAACC,EAAA,EAAD,CACEC,UAAU,MACVvE,GAAI,CACFoC,SAAU,WACV9C,gBAAiB,UACjBoD,MAAO,QALX,UAQE,UAAC8B,EAAA,EAAD,YACE,SAAC/D,EAAA,EAAD,CACEC,KAAK,QACLnB,MAAM,UACNY,QAAS9B,EACT,aAAW,QACX2B,GAAI,CAAEmD,QAASkB,GAAU,QAL3B,UAOE,SAACI,EAAA,EAAD,OAIF,SAACxD,EAAA,EAAD,CACEjB,GAAI,CAAE0E,GAAI7F,GAAU,EAAG8F,KAAM,GAC7BC,QAAQ,KACRL,UAAU,MAHZ,4EAQEJ,IACA,SAACjF,EAAA,EAAD,CAASqB,MAAM,yFAAmBC,OAAK,EAAvC,UACE,SAACC,EAAA,EAAD,CACEC,KAAK,MACLnB,MAAM,UACNY,QA1CS,WACrBxB,GAASkG,EAAAA,EAAAA,OACThF,EAAS,UAEThB,GAAUR,GACX,EAsCa,aAAW,QAJb,UAME,SAACyG,GAAA,EAAD,cAORX,IAAkB,SAAC,GAAD,MAGzB,ECtEKY,GAAaC,EAAAA,YAAiB,SAAoB/F,EAAOgG,GAC7D,OAAO,SAACC,EAAA,GAAD,QAAOC,UAAU,KAAKF,IAAKA,GAAShG,GAC5C,IAEc,SAASmG,KACtB,MAAwBJ,EAAAA,UAAe,GAAvC,eAAOK,EAAP,KAAaC,EAAb,KACMnB,GAAiBzC,EAAAA,EAAAA,IAAY0C,EAAAA,IAM7BmB,EAAc,WAClBD,GAAQ,EACT,EAKD,OACE,iCACE,SAACE,EAAA,EAAD,CACEC,WAAS,EACTb,QAAQ,WACRzE,QAhBkB,WACtBmF,GAAQ,EACT,EAeKI,KAAK,QACL1F,GAAI,CAAEiD,OAAQ,QALhB,4EASA,UAAC0C,EAAA,EAAD,CACEC,YAAU,EACVP,KAAMA,EACNhH,QAASkH,EACTM,oBAAqBd,GAJvB,WAME,SAAC,GAAD,CAAe1G,QAASkH,EAAaO,SApBpB,WACrBR,GAAQ,EACT,IAoBMnB,GACC,SAACrC,EAAA,EAAD,CAAO9B,GAAI,CAAE+B,EAAG,GAAhB,SAAsBC,EAAAA,EAAAA,kBAEtB,SAAC,EAAD,CAAS3D,QAASkH,SAK3B,CCvDM,I,GAAMQ,GAAmBjI,EAAAA,GAAAA,IAAH,oHAET,SAAAiE,GAAC,OAAKA,EAAEiE,WAAa,MAAQ,QAA5B,IAEZ,SAAAjE,GAAC,OAAIA,EAAErD,MAAMuH,MAAM,EAAlB,IAGGC,GAA0BpI,EAAAA,GAAAA,IAAH,sNCPvBqI,GAAgBrI,EAAAA,GAAAA,IAAH,oTAIV,SAAAiE,GAAC,OAAIA,EAAErD,MAAM0H,QAAQC,OAApB,IAKE,SAAAtE,GAAC,OAAIA,EAAErD,MAAM4H,MAAMC,QAAlB,ICmBpB,GArBgB,WACd,IAAMpC,GAAiBzC,EAAAA,EAAAA,IAAY0C,EAAAA,IAEnC,OACE,UAAC+B,GAAD,YACE,SAAC,GAAD,KACA,SAACrE,EAAA,EAAD,CACE9B,GAAI,CACFwG,UAAW,UAFf,SAKGrC,GACC,SAACrC,EAAA,EAAD,CAAO9B,GAAI,CAAE+B,EAAG,GAAhB,SAAsBC,EAAAA,EAAAA,kBAEtB,SAAC,EAAD,QAKT,EC8ID,GAnJmB,WAAO,IAAD,EACvB,GAAgC1D,EAAAA,EAAAA,UAAS,IAAzC,eAAOmI,EAAP,KAAiBC,EAAjB,KACMvC,GAAiBzC,EAAAA,EAAAA,IAAY0C,EAAAA,IAEnC,GAKIuC,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MAGIrI,GAAWC,EAAAA,EAAAA,MACTqI,GAAUC,EAAAA,EAAAA,MAAVD,OAERxI,EAAAA,EAAAA,YAAU,WAGR,OAFAwI,GAASP,EAAYO,GAEd,WACLP,EAAY,IACZM,GACD,CACF,GAAE,CAACA,EAAOC,IAEX,IAAMpH,GAAWC,EAAAA,EAAAA,MAEjB,GAAoChB,EAAAA,EAAAA,KAA5BD,EAAR,EAAQA,OAAQwF,EAAhB,EAAgBA,OAAQ8C,EAAxB,EAAwBA,QAQlBC,EAAQ,mCAAG,qFAAShH,EAAT,EAASA,IACxBzB,GAAS0B,EAAAA,EAAAA,GAASD,IAClBP,EAAS,UAAD,OAAWO,IAFJ,2CAAH,sDAad,OACE,UAAC2F,GAAD,CAAkBC,WAAY3B,GAAU8C,EAAxC,WACE,UAACjB,GAAD,YAEE,UAACmB,EAAA,EAAD,CACE9C,UAAU,OACVvE,GAAI,CACF,kBAAmB,CAAEsH,GAAI,GACzBC,GAAI,EACJpE,QAASgE,EAAU,OAAS,QAC5BK,IAAK,GAEPC,YAAU,EACVC,aAAa,KACbN,SAAUP,EAAaO,GAVzB,WAYE,SAACC,EAAA,EAAD,CAAK9C,UAAU,MAAMvE,GAAI,CAAE2E,KAAMwC,EAAU,UAAY,YAAvD,UACE,SAACQ,EAAA,GAAD,gBACElC,WAAS,EACTmC,UAAQ,EACRC,GAAG,MACHC,KAAK,MACLC,MAAM,gEACNnD,QAAQ,WACRf,MAAO4C,GACHG,EAAS,MAAO,CAClBgB,SAAU,CACR/D,OAAO,EACP7B,QAAS,8EAEXgG,QAAS,CACPnE,MAAOoE,EAAAA,GACPjG,QACE,iTAhBR,IAmBEkG,QAASpB,EAAO1G,IAChB+H,WAAU,UAAErB,EAAO1G,WAAT,aAAE,EAAY4B,QACxBoG,WAAY,CACVC,cACE,SAACC,EAAA,EAAD,CAAgBlG,SAAS,MAAzB,UAEI,SAAC3B,EAAA,EAAD,CACEN,QA9DN,WACduG,EAAY,IACZM,IACAnH,EAAS,SACV,EA2DqB0I,KAAK,QACL,aAAW,QACX7C,KAAK,QAJP,UAME,SAAC8C,EAAA,EAAD,CAAkB/I,SAAS,eAMrCgJ,QA9DS,SAAA9H,GACfA,EAAEoD,OAAOF,MAAMG,OAAS,IAAMhG,OAAOiG,OAAOtD,EAAEoD,OAAOF,OACvDlD,EAAEoD,OAAOF,MAAQ4C,EAGnBC,EAAY/F,EAAEoD,OAAOF,MAAM6E,OAC5B,QA4DO,SAAClD,EAAA,EAAD,CACE+C,KAAK,SACL9C,WAAS,EACTb,QAAQ,WACRc,KAAM7G,GAAUwF,EAAS,QAAU,SACnCrE,GAAI,CACF2E,KAAMwC,EAAU,UAAY,WAC5BlE,OAAQ,QAPZ,uIAaF,SAACzB,EAAA,EAAD,KAGA,SAACM,EAAA,EAAD,CAAO9B,GAAI,CAAEuH,GAAI,EAAGxF,EAAG,GAAvB,SACGkF,IAAU9C,GACT,SAAC,KAAD,KAEA,iCACE,SAAClD,EAAA,EAAD,CAAYjB,GAAI,CAAEuH,GAAI,EAAGD,GAAI,GAAK1C,QAAQ,KAAKL,UAAU,MAAzD,4EAGA,SAAC/C,EAAA,EAAD,KAEA,SAACP,EAAA,EAAD,CAAYjB,GAAI,CAAEuH,GAAI,EAAGD,GAAI,GAAK/C,UAAU,IAA5C,0qBAWP1F,IAAU,SAAC,GAAD,IACVwF,IAAU,SAAC,GAAD,MAGhB,C,qECtKYvF,EAAmB,WAM9B,MAAO,CAAED,QAJM8J,EAAAA,EAAAA,GAAc,qBAIZtE,QAHFsE,EAAAA,EAAAA,GAAc,qBAGJxB,SAFTwB,EAAAA,EAAAA,GAAc,sBAG/B,C,sKCPYC,EAAa,SAAAC,GAAK,OAAIA,EAAMzI,IAAI0I,KAAd,EAIlBpF,EAAmB,SAAAmF,GAAK,OAAIA,EAAME,SAAV,EAExBpH,GAAoBqH,EAAAA,EAAAA,IAC/B,CAACJ,EAAYlF,IACb,SAACuF,EAASxF,GACR,OAAOwF,EAAQxF,QAAO,SAAArD,GAAG,OAAIA,EAAIpC,OAAOkL,SAASzF,EAAxB,GAC1B,IAGUW,GAAwB4E,EAAAA,EAAAA,IAAe,CAACJ,IAAa,SAAAK,GAChE,OAA0B,IAAnBA,EAAQjF,MAChB,IAEYnC,GAAgCmH,EAAAA,EAAAA,IAC3C,CAACrH,IACD,SAAAA,GACE,OAAoC,IAA7BA,EAAkBqC,MAC1B,IAGUmF,GAAoBH,EAAAA,EAAAA,IAAe,CAACJ,IAAa,SAAAA,GAC5D,OAAOA,EAAW,EACnB,G","sources":["components/TtnList/TtnList.styled.js","components/TtnList/TtnItem/TtnItem.jsx","components/TtnList/TtnList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/History/HistoryHeader/HistoryHeader.jsx","components/Modals/HistoryModal/HistoryModal.jsx","Pages/SearchPage/SearchPage.styled.js","components/History/History.styled.js","components/History/History.jsx","Pages/SearchPage/SearchPage.jsx","hooks/useCustomQueries.js","redux/ttn/ttnSellectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledTtnList = styled.div`\n  /* flex: 0 0 30%; */\n  /* height: 50%; */\n\n  @media screen and (min-width: 1200px) {\n    /* flex: 0 0 20%; */\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Divider,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDispatch } from 'react-redux';\nimport { format } from 'date-fns';\nimport { styled } from '@mui/material/styles';\nimport { tooltipClasses } from '@mui/material/Tooltip';\nimport { removeTtn } from 'redux/ttn/ttnSlice';\nimport { fetchTtn } from 'redux/ttn/ttnOperations';\nimport { useNavigate } from 'react-router';\nimport { eu } from 'date-fns/locale';\nimport { useCustomQueries } from 'hooks';\nimport { theme } from 'theme';\n\nconst TtnItem = ({\n  data: { Number, requestDate, Status, RecipientDateTime, StatusCode },\n  onClose,\n}) => {\n  const [ttnStatusColor, setTtnStatusColor] = useState('');\n\n  useEffect(() => {\n    switch (+StatusCode) {\n      case 3:\n        setTtnStatusColor(theme.colors.statusNotFound);\n        break;\n\n      case 5:\n        setTtnStatusColor(theme.colors.statusOnTheWay);\n        break;\n\n      case 7:\n        setTtnStatusColor(theme.colors.statusInPostOffice);\n        break;\n\n      case 8:\n        setTtnStatusColor(theme.colors.statusInPostOffice);\n        break;\n\n      case 9:\n        setTtnStatusColor(theme.colors.statusDone);\n        break;\n\n      case 10:\n        setTtnStatusColor(theme.colors.statusDone);\n        break;\n\n      case 11:\n        setTtnStatusColor(theme.colors.statusDone);\n        break;\n\n      default:\n        setTtnStatusColor(theme.colors.secondary);\n\n        break;\n    }\n  }, [StatusCode]);\n\n  const dispatch = useDispatch();\n  const { mobile } = useCustomQueries();\n\n  const HtmlTooltip = styled(({ className, ...props }) => (\n    <Tooltip {...props} classes={{ popper: className }} />\n  ))(({ theme }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }));\n\n  const navigate = useNavigate();\n\n  const handleRemove = (e, ttn) => {\n    e.stopPropagation();\n\n    dispatch(removeTtn(ttn));\n    navigate(`/check`, { replace: true });\n  };\n\n  const handleCheck = ttn => {\n    dispatch(fetchTtn(ttn));\n    navigate(`/check/${ttn}`);\n\n    mobile && onClose();\n  };\n\n  return (\n    <>\n      <ListItem\n        sx={{\n          background: ttnStatusColor,\n        }}\n        button\n        onClick={() => handleCheck(Number)}\n        secondaryAction={\n          <Tooltip title=\"Видалити\" arrow>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"delete\"\n              onClick={e => handleRemove(e, Number)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        }\n      >\n        <HtmlTooltip\n          title={\n            <>\n              <Typography color=\"inherit\">{Status}</Typography>\n              <b>{RecipientDateTime}</b>\n            </>\n          }\n        >\n          <ListItemText\n            primary={Number}\n            secondary={format(requestDate, 'HH:MM:ss', {\n              locale: eu,\n            })}\n          />\n        </HtmlTooltip>\n      </ListItem>\n      <Divider />\n    </>\n  );\n};\n\nTtnItem.propTypes = {\n  Number: PropTypes.string,\n  requestDate: PropTypes.string,\n  Status: PropTypes.string,\n  RecipientDateTime: PropTypes.string,\n  StatusCode: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default TtnItem;\n","import React from 'react';\nimport { List, Paper } from '@mui/material';\nimport { StyledTtnList } from './TtnList.styled';\nimport { useSelector } from 'react-redux';\nimport {\n  sellectFiltredTtn,\n  sellectIsFilteredTtnListEmpty,\n} from 'redux/ttn/ttnSellectors';\nimport { message } from 'utils/messages';\nimport TtnItem from './TtnItem';\nimport PropTypes from 'prop-types';\n\nconst TtnList = ({ onClose }) => {\n  const filteredTtnList = useSelector(sellectFiltredTtn);\n  const isTtnFilteredListEmpty = useSelector(sellectIsFilteredTtnListEmpty);\n\n  return (\n    <StyledTtnList>\n      {isTtnFilteredListEmpty ? (\n        <Paper sx={{ p: 2 }}>{message.noSearchData}</Paper>\n      ) : (\n        <List>\n          {filteredTtnList.map(ttn => {\n            return <TtnItem key={ttn.Number} data={ttn} onClose={onClose} />;\n          })}\n        </List>\n      )}\n    </StyledTtnList>\n  );\n};\n\nTtnList.propTypes = { onClose: PropTypes.func };\n\nexport default TtnList;\n","import { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\n\nexport const Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.grey[100],\n  '&:hover': {\n    backgroundColor: theme.palette.grey[50],\n  },\n  marginTop: 10,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(0),\n    width: 'auto',\n  },\n}));\n\nexport const SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    width: '100%',\n  },\n}));\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Search, SearchIconWrapper, StyledInputBase } from './Filter.styled';\nimport { sellectTtnFilter } from 'redux/ttn/ttnSellectors';\nimport { inputFilterTtn } from 'redux/ttn/ttnFilter/ttnFilterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(sellectTtnFilter);\n\n  const handleChangeFilter = e => {\n    if (e.target.value.length > 14 || Number.isNaN(+e.target.value)) {\n      return;\n    }\n    dispatch(inputFilterTtn(e.target.value));\n  };\n\n  return (\n    <Search>\n      <SearchIconWrapper>\n        <SearchIcon />\n      </SearchIconWrapper>\n      <StyledInputBase\n        placeholder=\"Search…\"\n        inputProps={{ 'aria-label': 'search' }}\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </Search>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ClearAllIcon from '@mui/icons-material/ClearAll';\n\nimport Filter from 'components/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeAllTtn } from 'redux/ttn/ttnSlice';\nimport { sellectIsTtnListEmpty } from 'redux/ttn/ttnSellectors';\nimport { useNavigate } from 'react-router-dom';\nimport { useCustomQueries } from 'hooks';\n\nconst HistoryHeader = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const isTtnListEmpty = useSelector(sellectIsTtnListEmpty);\n  const navigate = useNavigate();\n\n  // media queries\n  const { mobile, tablet } = useCustomQueries();\n\n  const handleClearAll = () => {\n    dispatch(removeAllTtn());\n    navigate(`/check`);\n\n    mobile && onClose();\n  };\n\n  return (\n    <>\n      <AppBar\n        component=\"div\"\n        sx={{\n          position: 'relative',\n          backgroundColor: '#008BD1',\n          width: '100%',\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={onClose}\n            aria-label=\"close\"\n            sx={{ display: tablet && 'none' }}\n          >\n            <CloseIcon />\n          </IconButton>\n\n          {/* History Header */}\n          <Typography\n            sx={{ ml: mobile && 2, flex: 1 }}\n            variant=\"h6\"\n            component=\"div\"\n          >\n            Історія ТТН\n          </Typography>\n\n          {!isTtnListEmpty && (\n            <Tooltip title=\"Видалити усі ТТН\" arrow>\n              <IconButton\n                edge=\"end\"\n                color=\"inherit\"\n                onClick={handleClearAll}\n                aria-label=\"close\"\n              >\n                <ClearAllIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n        </Toolbar>\n      </AppBar>\n\n      {!isTtnListEmpty && <Filter />}\n    </>\n  );\n};\n\nexport default HistoryHeader;\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\n\nimport Slide from '@mui/material/Slide';\nimport TtnList from 'components/TtnList';\nimport HistoryHeader from 'components/History/HistoryHeader/HistoryHeader';\nimport { useSelector } from 'react-redux';\nimport { sellectIsTtnListEmpty } from 'redux/ttn/ttnSellectors';\nimport { Paper } from '@mui/material';\nimport { message } from 'utils/messages';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const [open, setOpen] = React.useState(false);\n  const isTtnListEmpty = useSelector(sellectIsTtnListEmpty);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClearAll = () => {\n    setOpen(false);\n  };\n  return (\n    <>\n      <Button\n        fullWidth\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        size=\"large\"\n        sx={{ height: '56px' }}\n      >\n        Історія ТТН\n      </Button>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <HistoryHeader onClose={handleClose} clearAll={handleClearAll} />\n\n        {isTtnListEmpty ? (\n          <Paper sx={{ p: 2 }}>{message.historyIsEmpty}</Paper>\n        ) : (\n          <TtnList onClose={handleClose} />\n        )}\n      </Dialog>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledSearchPage = styled.div`\n  display: flex;\n  flex-direction: ${p => (p.mediaQuery ? 'row' : 'column')};\n  justify-content: space-between;\n  gap: ${p => p.theme.space[5]}px;\n`;\n\nexport const StyledSearchPageResults = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  flex: 1 1 70%;\n  width: 100%;\n  gap: 10px;\n\n  @media screen and (min-width: 1200px) {\n    flex: 1 1 80%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledHistory = styled.div`\n  flex: 1 1 30%;\n\n  height: 100%;\n  box-shadow: ${p => p.theme.shadows.history};\n  *::-webkit-scrollbar {\n    width: 0px;\n  }\n\n  border-radius: ${p => p.theme.radii.standart};\n  /* background-color: aqua; */\n  overflow: hidden;\n  /* border: solid 3px; */\n\n  @media screen and (min-width: 1200px) {\n    flex: 1 1 20%;\n  }\n`;\n","import React from 'react';\nimport TtnList from 'components/TtnList';\nimport { Paper } from '@mui/material';\nimport { StyledHistory } from './History.styled';\nimport HistoryHeader from './HistoryHeader/HistoryHeader';\nimport { useSelector } from 'react-redux';\nimport { sellectIsTtnListEmpty } from 'redux/ttn/ttnSellectors';\nimport { message } from 'utils/messages';\n\nconst History = () => {\n  const isTtnListEmpty = useSelector(sellectIsTtnListEmpty);\n\n  return (\n    <StyledHistory>\n      <HistoryHeader />\n      <Paper\n        sx={{\n          overflowY: 'scroll',\n        }}\n      >\n        {isTtnListEmpty ? (\n          <Paper sx={{ p: 2 }}>{message.historyIsEmpty}</Paper>\n        ) : (\n          <TtnList />\n        )}\n      </Paper>\n    </StyledHistory>\n  );\n};\n\nexport default History;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Divider,\n  IconButton,\n  InputAdornment,\n  Paper,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport { useForm } from 'react-hook-form';\nimport { ttnRegExp } from 'utils/options';\nimport HistoryModal from 'components/Modals/HistoryModal';\nimport { StyledSearchPage, StyledSearchPageResults } from './SearchPage.styled';\nimport History from 'components/History';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTtn } from 'redux/ttn/ttnOperations';\nimport { Outlet, useNavigate, useParams } from 'react-router';\nimport { sellectIsTtnListEmpty } from 'redux/ttn/ttnSellectors';\nimport { useCustomQueries } from 'hooks';\n\nconst SearchPage = () => {\n  const [ttnValue, setTtnValue] = useState('');\n  const isTtnListEmpty = useSelector(sellectIsTtnListEmpty);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  const dispatch = useDispatch();\n  const { ttnId } = useParams();\n\n  useEffect(() => {\n    ttnId && setTtnValue(ttnId);\n\n    return () => {\n      setTtnValue('');\n      reset();\n    };\n  }, [reset, ttnId]);\n\n  const navigate = useNavigate();\n\n  const { mobile, tablet, desktop } = useCustomQueries();\n\n  const onReset = () => {\n    setTtnValue('');\n    reset();\n    navigate(`/check`);\n  };\n\n  const onSubmit = async ({ ttn }) => {\n    dispatch(fetchTtn(ttn));\n    navigate(`/check/${ttn}`);\n  };\n\n  const handlerInput = e => {\n    if (e.target.value.length > 14 || Number.isNaN(+e.target.value)) {\n      e.target.value = ttnValue;\n      return;\n    }\n    setTtnValue(e.target.value.trim());\n  };\n\n  return (\n    <StyledSearchPage mediaQuery={tablet || desktop}>\n      <StyledSearchPageResults>\n        {/* Form */}\n        <Box\n          component=\"form\"\n          sx={{\n            '& > :not(style)': { mb: 4 },\n            mt: 0,\n            display: desktop ? 'flex' : 'block',\n            gap: 2,\n          }}\n          noValidate\n          autoComplete=\"on\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <Box component=\"div\" sx={{ flex: desktop ? '1 1 70%' : '1 1 auto' }}>\n            <TextField\n              fullWidth\n              required\n              id=\"ttn\"\n              name=\"ttn\"\n              label=\"Введіть ТТН\"\n              variant=\"outlined\"\n              value={ttnValue}\n              {...register('ttn', {\n                required: {\n                  value: true,\n                  message: 'ТТН не введено',\n                },\n                pattern: {\n                  value: ttnRegExp,\n                  message:\n                    'Номер має починатися з чисел: 1, 2, 5, та бути довжиной 14 символів!',\n                },\n              })}\n              error={!!errors.ttn}\n              helperText={errors.ttn?.message}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    {\n                      <IconButton\n                        onClick={onReset}\n                        type=\"reset\"\n                        aria-label=\"clear\"\n                        size=\"small\"\n                      >\n                        <HighlightOffIcon fontSize=\"large\" />\n                      </IconButton>\n                    }\n                  </InputAdornment>\n                ),\n              }}\n              onInput={handlerInput}\n            />\n          </Box>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"outlined\"\n            size={mobile || tablet ? 'large' : 'medium'}\n            sx={{\n              flex: desktop ? '1 1 30%' : '1 1 auto',\n              height: '56px',\n            }}\n          >\n            Отримати статус за ТТН\n          </Button>\n        </Box>\n        <Divider />\n\n        {/* Result */}\n        <Paper sx={{ mt: 3, p: 2 }}>\n          {ttnId && !isTtnListEmpty ? (\n            <Outlet />\n          ) : (\n            <>\n              <Typography sx={{ mt: 0, mb: 2 }} variant=\"h6\" component=\"div\">\n                Інструкція.\n              </Typography>\n              <Divider />\n\n              <Typography sx={{ mt: 1, mb: 1 }} component=\"p\">\n                Для отримання інформації про відправлення введіть ТТН. ТТН номер\n                має починатися з символів 1, 2, 5 і містити тільки 14 числових\n                знаків!\n              </Typography>\n            </>\n          )}\n        </Paper>\n\n        {/* History */}\n      </StyledSearchPageResults>\n      {mobile && <HistoryModal />}\n      {tablet && <History />}\n    </StyledSearchPage>\n  );\n};\n\nexport default SearchPage;\n","import { useMediaQuery } from '@mui/material';\n\nexport const useCustomQueries = () => {\n  // media queries\n  const mobile = useMediaQuery('(max-width:767px)');\n  const tablet = useMediaQuery('(min-width:768px)');\n  const desktop = useMediaQuery('(min-width:1200px)');\n\n  return { mobile, tablet, desktop };\n};\n","import { createSelector } from 'reselect';\n\nexport const sellectTtn = state => state.ttn.items;\nexport const sellectIsLoading = state => state.ttn.isLoading;\nexport const sellectError = state => state.ttn.error;\n\nexport const sellectTtnFilter = state => state.ttnFilter;\n\nexport const sellectFiltredTtn = createSelector(\n  [sellectTtn, sellectTtnFilter],\n  (ttnList, filter) => {\n    return ttnList.filter(ttn => ttn.Number.includes(filter));\n  }\n);\n\nexport const sellectIsTtnListEmpty = createSelector([sellectTtn], ttnList => {\n  return ttnList.length === 0;\n});\n\nexport const sellectIsFilteredTtnListEmpty = createSelector(\n  [sellectFiltredTtn],\n  sellectFiltredTtn => {\n    return sellectFiltredTtn.length === 0;\n  }\n);\n\nexport const sellectCurrentTtn = createSelector([sellectTtn], sellectTtn => {\n  return sellectTtn[0];\n});\n"],"names":["StyledTtnList","styled","data","Number","requestDate","Status","RecipientDateTime","StatusCode","onClose","useState","ttnStatusColor","setTtnStatusColor","useEffect","theme","dispatch","useDispatch","mobile","useCustomQueries","HtmlTooltip","className","props","Tooltip","classes","popper","tooltipClasses","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","navigate","useNavigate","ListItem","sx","background","button","onClick","ttn","fetchTtn","secondaryAction","title","arrow","IconButton","edge","e","stopPropagation","removeTtn","replace","handleRemove","Delete","Typography","ListItemText","primary","secondary","format","locale","eu","Divider","filteredTtnList","useSelector","sellectFiltredTtn","isTtnFilteredListEmpty","sellectIsFilteredTtnListEmpty","Paper","p","message","List","map","Search","position","borderRadius","shape","palette","grey","marginTop","width","breakpoints","up","marginLeft","spacing","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","paddingLeft","filter","sellectTtnFilter","placeholder","inputProps","value","onChange","target","length","isNaN","inputFilterTtn","isTtnListEmpty","sellectIsTtnListEmpty","tablet","AppBar","component","Toolbar","Close","ml","flex","variant","removeAllTtn","ClearAll","Transition","React","ref","Slide","direction","FullScreenDialog","open","setOpen","handleClose","Button","fullWidth","size","Dialog","fullScreen","TransitionComponent","clearAll","StyledSearchPage","mediaQuery","space","StyledSearchPageResults","StyledHistory","shadows","history","radii","standart","overflowY","ttnValue","setTtnValue","useForm","register","handleSubmit","errors","formState","reset","ttnId","useParams","desktop","onSubmit","Box","mb","mt","gap","noValidate","autoComplete","TextField","required","id","name","label","pattern","ttnRegExp","error","helperText","InputProps","endAdornment","InputAdornment","type","HighlightOff","onInput","trim","useMediaQuery","sellectTtn","state","items","ttnFilter","createSelector","ttnList","includes","sellectCurrentTtn"],"sourceRoot":""}